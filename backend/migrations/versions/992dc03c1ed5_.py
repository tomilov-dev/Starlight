"""empty message

Revision ID: 992dc03c1ed5
Revises: b375eec8fb22
Create Date: 2024-07-05 18:59:53.898121

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '992dc03c1ed5'
down_revision: Union[str, None] = 'b375eec8fb22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('movie_country', sa.Column('country_id', sa.Integer(), nullable=False))
    op.add_column('movie_country', sa.Column('imdb_movie_id', sa.Integer(), nullable=False))
    op.add_column('movie_country', sa.Column('tmdb_movie_id', sa.Integer(), nullable=False))
    op.drop_constraint('movie_country_country_imdb_movie_key', 'movie_country', type_='unique')
    op.drop_constraint('movie_country_country_tmdb_movie_key', 'movie_country', type_='unique')
    op.create_unique_constraint(None, 'movie_country', ['country_id', 'imdb_movie_id'])
    op.create_unique_constraint(None, 'movie_country', ['country_id', 'tmdb_movie_id'])
    op.drop_constraint('movie_country_tmdb_movie_fkey', 'movie_country', type_='foreignkey')
    op.drop_constraint('movie_country_country_fkey', 'movie_country', type_='foreignkey')
    op.drop_constraint('movie_country_imdb_movie_fkey', 'movie_country', type_='foreignkey')
    op.create_foreign_key(None, 'movie_country', 'tmdb_movie', ['tmdb_movie_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_country', 'country', ['country_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_country', 'imdb_movie', ['imdb_movie_id'], ['id'], ondelete='CASCADE')
    op.drop_column('movie_country', 'imdb_movie')
    op.drop_column('movie_country', 'tmdb_movie')
    op.drop_column('movie_country', 'country')
    op.add_column('movie_principal', sa.Column('characters', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('movie_principal', sa.Column('imdb_movie_id', sa.Integer(), nullable=False))
    op.add_column('movie_principal', sa.Column('imdb_person_id', sa.Integer(), nullable=False))
    op.add_column('movie_principal', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'movie_principal', ['category_id', 'imdb_person_id'])
    op.create_unique_constraint(None, 'movie_principal', ['category_id', 'imdb_movie_id'])
    op.drop_constraint('movie_principal_category_fkey', 'movie_principal', type_='foreignkey')
    op.drop_constraint('movie_principal_imdb_movie_fkey', 'movie_principal', type_='foreignkey')
    op.drop_constraint('movie_principal_imdb_person_fkey', 'movie_principal', type_='foreignkey')
    op.create_foreign_key(None, 'movie_principal', 'imdb_movie', ['imdb_movie_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_principal', 'imdb_person', ['imdb_person_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_principal', 'profession', ['category_id'], ['id'], ondelete='SET NULL')
    op.drop_column('movie_principal', 'imdb_movie')
    op.drop_column('movie_principal', 'category')
    op.drop_column('movie_principal', 'imdb_person')
    op.drop_column('movie_principal', 'charachters')
    op.add_column('movie_production', sa.Column('production_company_id', sa.Integer(), nullable=False))
    op.add_column('movie_production', sa.Column('imdb_movie_id', sa.Integer(), nullable=False))
    op.add_column('movie_production', sa.Column('tmdb_movie_id', sa.Integer(), nullable=False))
    op.drop_constraint('movie_production_production_company_imdb_movie_key', 'movie_production', type_='unique')
    op.drop_constraint('movie_production_production_company_tmdb_movie_key', 'movie_production', type_='unique')
    op.create_unique_constraint(None, 'movie_production', ['production_company_id', 'tmdb_movie_id'])
    op.create_unique_constraint(None, 'movie_production', ['production_company_id', 'imdb_movie_id'])
    op.drop_constraint('movie_production_imdb_movie_fkey', 'movie_production', type_='foreignkey')
    op.drop_constraint('movie_production_tmdb_movie_fkey', 'movie_production', type_='foreignkey')
    op.drop_constraint('movie_production_production_company_fkey', 'movie_production', type_='foreignkey')
    op.create_foreign_key(None, 'movie_production', 'imdb_movie', ['imdb_movie_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_production', 'tmdb_movie', ['tmdb_movie_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'movie_production', 'production_company', ['production_company_id'], ['id'], ondelete='CASCADE')
    op.drop_column('movie_production', 'imdb_movie')
    op.drop_column('movie_production', 'tmdb_movie')
    op.drop_column('movie_production', 'production_company')
    op.create_unique_constraint(None, 'person_profession', ['profession_id', 'person_id'])
    op.create_unique_constraint(None, 'profession', ['name_en'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'profession', type_='unique')
    op.drop_constraint(None, 'person_profession', type_='unique')
    op.add_column('movie_production', sa.Column('production_company', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('movie_production', sa.Column('tmdb_movie', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('movie_production', sa.Column('imdb_movie', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'movie_production', type_='foreignkey')
    op.drop_constraint(None, 'movie_production', type_='foreignkey')
    op.drop_constraint(None, 'movie_production', type_='foreignkey')
    op.create_foreign_key('movie_production_production_company_fkey', 'movie_production', 'production_company', ['production_company'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_production_tmdb_movie_fkey', 'movie_production', 'tmdb_movie', ['tmdb_movie'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_production_imdb_movie_fkey', 'movie_production', 'imdb_movie', ['imdb_movie'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'movie_production', type_='unique')
    op.drop_constraint(None, 'movie_production', type_='unique')
    op.create_unique_constraint('movie_production_production_company_tmdb_movie_key', 'movie_production', ['production_company', 'tmdb_movie'])
    op.create_unique_constraint('movie_production_production_company_imdb_movie_key', 'movie_production', ['production_company', 'imdb_movie'])
    op.drop_column('movie_production', 'tmdb_movie_id')
    op.drop_column('movie_production', 'imdb_movie_id')
    op.drop_column('movie_production', 'production_company_id')
    op.add_column('movie_principal', sa.Column('charachters', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('movie_principal', sa.Column('imdb_person', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('movie_principal', sa.Column('category', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('movie_principal', sa.Column('imdb_movie', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'movie_principal', type_='foreignkey')
    op.drop_constraint(None, 'movie_principal', type_='foreignkey')
    op.drop_constraint(None, 'movie_principal', type_='foreignkey')
    op.create_foreign_key('movie_principal_imdb_person_fkey', 'movie_principal', 'imdb_person', ['imdb_person'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_principal_imdb_movie_fkey', 'movie_principal', 'imdb_movie', ['imdb_movie'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_principal_category_fkey', 'movie_principal', 'profession', ['category'], ['id'], ondelete='SET NULL')
    op.drop_constraint(None, 'movie_principal', type_='unique')
    op.drop_constraint(None, 'movie_principal', type_='unique')
    op.drop_column('movie_principal', 'category_id')
    op.drop_column('movie_principal', 'imdb_person_id')
    op.drop_column('movie_principal', 'imdb_movie_id')
    op.drop_column('movie_principal', 'characters')
    op.add_column('movie_country', sa.Column('country', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('movie_country', sa.Column('tmdb_movie', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('movie_country', sa.Column('imdb_movie', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'movie_country', type_='foreignkey')
    op.drop_constraint(None, 'movie_country', type_='foreignkey')
    op.drop_constraint(None, 'movie_country', type_='foreignkey')
    op.create_foreign_key('movie_country_imdb_movie_fkey', 'movie_country', 'imdb_movie', ['imdb_movie'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_country_country_fkey', 'movie_country', 'country', ['country'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('movie_country_tmdb_movie_fkey', 'movie_country', 'tmdb_movie', ['tmdb_movie'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'movie_country', type_='unique')
    op.drop_constraint(None, 'movie_country', type_='unique')
    op.create_unique_constraint('movie_country_country_tmdb_movie_key', 'movie_country', ['country', 'tmdb_movie'])
    op.create_unique_constraint('movie_country_country_imdb_movie_key', 'movie_country', ['country', 'imdb_movie'])
    op.drop_column('movie_country', 'tmdb_movie_id')
    op.drop_column('movie_country', 'imdb_movie_id')
    op.drop_column('movie_country', 'country_id')
    # ### end Alembic commands ###
